name: Delta V - back

on:
  workflow_dispatch:
    inputs:
      job:
        description: "Job to run."
        required: true
        default: "stage-deploy"
  pull_request:
    paths:
      - back/**
  push:
    branches:
      - develop
      - master
    paths:
      - back/**

jobs:
  test-back:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    env:
      PORT: 8080
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: pass
      DB_DATABASE: postgres
      ACCESS_TOKEN_SECRET: accessTokenSecretPipeline
      REFRESH_TOKEN_SECRET: refreshTokenSecretPipeline
      VALIDATION_TOKEN_SECRET: validationTokenSecretPipeline
      RESET_PASSWORD_TOKEN_SECRET: resetPasswordTokenSecretPipeline
      URL_FRONTEND: http://localhost:3000
      ROUTE_FRONTEND_VALIDATE_ACCOUNT: /validate-account
      ROUTE_FRONTEND_RESET_PASSWORD: /reset-password
      ROUTE_FRONTEND_CHECK_DECLARATION: /check-declaration
      LOG_LEVEL: fatal
      WHITE_LIST_AGENT_EMAIL: "test@gmail.com"
      FEEDBACK_RECEIVER_EMAIL_LIST: "test@gmail.com"
      REDIS_URL: "redis://:redis@localhost:6379/0"
      CELLAR_HOST: http://localhost:8000
      CELLAR_KEY_ID: cellarKeyId
      CELLAR_KEY_SECRET: cellarKeySecret
      CELLAR_BUCKET_NAME: cellarBuck

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1
        with:
          postgresql version: "13"
          postgresql db: postgres
          postgresql user: postgres
          postgresql password: pass
      - run: "yarn install --ignore-scripts"
      - run: "npm rebuild bcrypt --build-from-source"
      - run: yarn migration:run
      - run: yarn lint
      - run: yarn test

  deploy-back-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: test-back
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: 47ng/actions-clever-cloud@v1.3.1
        with:
          timeout: 1800
          alias: delta-v-back-stage
          force: true
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}

  deploy-back-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: test-back
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: 47ng/actions-clever-cloud@v1.3.1
        with:
          timeout: 1800
          alias: delta-v-back-prod
          force: true
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}